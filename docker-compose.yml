# This file orchestrates the five core services of the AISavvy platform,
# using a local LLM with Ollama for stability and control.
services:

  # 1. The PostgreSQL Database Service
  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER_SUPER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_SUPER}
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /home/ubuntu/AISavvy/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_SUPER} -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. The Ollama LLM Serving Service (Re-introduced)
  ollama:
    image: ollama/ollama
    container_name: ollama-service
    restart: always
    volumes:
      - ollama_data:/root/.ollama

  # 3. The Backend API (Now using Ollama)
  app:
    build: ./app
    container_name: aisavvy-api
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - /home/ubuntu/AISavvy/app_data:/app/data
    environment:
      # Using read-only user credentials
      POSTGRES_USER: ${POSTGRES_USER_APP}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_APP}
      DB_HOST: db
      POSTGRES_DB: mydb
      # Pointing to the internal ollama service
      OLLAMA_HOST: http://ollama:11434
      LLM_MODEL: llama3
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started

  # 4. The Streamlit Web Interface (unchanged)
  ui:
    build: ./ui
    container_name: aisavvy-ui
    restart: always
    ports:
      - "8501:8501"
    depends_on:
      app:
        condition: service_started

  # 5. The Telegram Bot Service (unchanged)
  telegram-bot:
    build: ./telegram_bot
    container_name: aisavvy-telegram-bot
    restart: always
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      API_URL: http://app:8000/query
    depends_on:
      app:
        condition: service_started

# Re-introduce the ollama_data volume
volumes:
  pgdata:
  ollama_data:
